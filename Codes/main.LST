C51 COMPILER V8.08   MAIN                                                                  09/07/2010 19:50:34 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**************************************************************************************************
   2                          Platform: Fire Bird V P89V51RD2
   3                          Title: Motion Control
   4                          Author: E-Yantra Team, ERTS Lab, IIT Bombay.
   5                          Compiled with: uVision3 V3.90; C Compiler: C51.Exe, V8.18
   6          **************************************************************************************************/
   7          
   8          /********************************************************************************
   9          
  10             Copyright (c) 2010, ERTS Lab, IIT Bombay.                       -*- c -*-
  11             All rights reserved.
  12          
  13             Redistribution and use in source and binary forms, with or without
  14             modification, are permitted provided that the following conditions are met:
  15          
  16             * Redistributions of source code must retain the above copyright
  17               notice, this list of conditions and the following disclaimer.
  18          
  19             * Redistributions in binary form must reproduce the above copyright
  20               notice, this list of conditions and the following disclaimer in
  21               the documentation and/or other materials provided with the
  22               distribution.
  23          
  24             * Neither the name of the copyright holders nor the names of
  25               contributors may be used to endorse or promote products derived
  26               from this software without specific prior written permission.
  27          
  28             * Source code can be used for academic purpose. 
  29                   For commercial use permission form the author needs to be taken.
  30          
  31            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  32            AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  33            IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  34            ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  35            LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  36            CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  37            SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  38            INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  39            CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  40            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  41            POSSIBILITY OF SUCH DAMAGE. 
  42          
  43            Software released under Creative Commence cc by-nc-sa licence.
  44            For legal information refer to: 
  45            http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode
  46          
  47          ********************************************************************************/ 
  48          
  49          #include <intrins.h>
  50          #include "p89v51rx2.H"
  51          
  52          sbit buzzer=P2^7;       // buzzer is connected to P2.7
  53          sbit LB=P1^0;           //LEFT BACK Pin
  54          sbit LF=P1^1;           //LEFT FRONT Pin
  55          sbit RF=P1^2;           //RIGHT FRONT Pin
C51 COMPILER V8.08   MAIN                                                                  09/07/2010 19:50:34 PAGE 2   

  56          sbit RB=P3^4;           //RIGHT BACK Pin
  57          sbit left_velocity=P1^3;//Left velocity control pin. 
  58          sbit right_velocity=P1^4;//Right velocity control pin. 
  59          
  60          // function for giving a delay of ms milliseconds
  61          
  62          void delay_ms(unsigned int ms)
  63          {
  64   1      unsigned int i,j;
  65   1      
  66   1      for(i=0;i<ms;i++)
  67   1      for(j=0;j<53;j++);
  68   1      }
  69          
  70                  
  71          /**********************************************************************************
  72          RF =  RIGHT MOTOR FORWARD
  73          RB = RIGHT MOTOR BACKWARD
  74          LF = LEFT MOTOR FORWARD
  75          LB = LEFT MOTOR BACKWARD
  76          **********************************************************************************/
  77          
  78          
  79          //direction control subroutines
  80          
  81          void forward(void)
  82          {
  83   1      RF=1;
  84   1      LF=1;
  85   1      RB=0;
  86   1      LB=0;
  87   1      }
  88          
  89          void backward(void)
  90          {
  91   1              RF=0;
  92   1              LF=0;
  93   1              RB=1;
  94   1              LB=1;
  95   1      }
  96          
  97          
  98          void left(void)
  99          {
 100   1              RF=1;
 101   1              LF=0;
 102   1              RB=0;
 103   1              LB=1;
 104   1      }
 105          
 106          void right(void)  
 107          {
 108   1              RF=0;
 109   1              LF=1;
 110   1              RB=1;
 111   1              LB=0;
 112   1      }
 113          
 114          void stop(void)
 115          {
 116   1              RF=0;
 117   1              LF=0;
C51 COMPILER V8.08   MAIN                                                                  09/07/2010 19:50:34 PAGE 3   

 118   1              RB=0;
 119   1              LB=0;
 120   1      }
 121          
 122          
 123          //main function starts here
 124          void main (void)
 125          
 126          {
 127   1      
 128   1              buzzer=1;                 //switch off the buzzer
 129   1              left_velocity=1;  //setting this pin to one sets the motor to run at maximum velocity. 
 130   1                                                //Thus enable pin of Motor driver is always on unlike in PWM mode.
 131   1              right_velocity=1; //setting this pin to one sets the motor to run at maximum velocity.
 132   1                                                //Thus enable pin of Motor driver is always on unlike in PWM mode
 133   1                                               
 134   1              while(1)
 135   1              {
 136   2                      forward();
 137   2                      buzzer=0;
 138   2                      delay_ms(1000); //motor moves in forward direction for 1000 milliseconds
 139   2                      
 140   2                      buzzer=1;
 141   2                      stop();
 142   2                      delay_ms(1000); //motor stops for 1000 milliseconds
 143   2                      
 144   2                      backward();
 145   2                      delay_ms(1000); //motor moves in backward direction for 1000 milliseconds
 146   2                      
 147   2                      stop();
 148   2                      delay_ms(1000); //motor stops for 1000 milliseconds
 149   2                      
 150   2                      left();
 151   2                      delay_ms(1000); //motor moves in left direction for 1000 milliseconds
 152   2                      
 153   2                      stop();
 154   2                      delay_ms(1000); //motor stops for 1000 milliseconds
 155   2                      
 156   2                      right();
 157   2                      delay_ms(1000); //motor moves in right direction for 1000 milliseconds
 158   2                      
 159   2                      stop();
 160   2                      delay_ms(4000); //motor stops for 1000 milliseconds
 161   2              }
 162   1      }
 163          
 164          
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    139    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
